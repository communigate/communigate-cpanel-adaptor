document.addEventListener("DOMContentLoaded", function() {
    require(["frameworksBuild"], function() {
	require(["jquery"], function($) {
            // Globals
            var accounts;
            var domains;
            var totals = {
                "account": {
                    "account": "",
                    "used": 0
                },
                "domains": {}
            };

            var getAccounts = function () {
                var api2_call = {
	            "cpanel_jsonapi_version": 2,
	            "cpanel_jsonapi_module": "CommuniGate",
	            "cpanel_jsonapi_func": "AccountsOverview"
                };
                // callback
                var success = function (res) {
	            var data = JSON.parse(res);
	            if (data.cpanelresult.event.result) {
	                accounts = Object.keys(data.cpanelresult.data[0].accounts).map(function (k) {
		            return data.cpanelresult.data[0].accounts[k];
	                });
                        
                        for (var domain in domains) {
                            totals.domains[domain] = {};
                            totals.domains[domain].diskUsage = 0;
                            totals.domains[domain].stats = domains[domain].stats;
                            totals.domains[domain].stats = (domains[domain].stats ? domains[domain].stats : {});
                            if (totals.domains[domain].stats.BytesSent && totals.domains[domain].stats.BytesSent > 0) {
                                var bytesSent = parseInt(totals.domains[domain].stats.BytesSent.substring(1));
                                totals.domains[domain].stats.MBSent = bytesSent / 1024 / 1024;
                            } else {
                                totals.domains[domain].stats.MBSent = 0;
                            }
                            if (totals.domains[domain].stats.BytesReceived && totals.domains[domain].stats.BytesReceived > 0) {
                                var bytesReceived = parseInt(totals.domains[domain].stats.BytesReceived.substring(1));
                                totals.domains[domain].stats.MBReceived = bytesReceived / 1024 / 1024;
                            } else {
                                totals.domains[domain].stats.MBReceived = 0;
                            }

                            for (var i = 0; i < accounts.length; i++) {
                                if (accounts[i].domain == domain) {
                                    totals.domains[domain].diskUsage += accounts[i].used;
                                }
                                if (accounts[i].stats.BytesSent && accounts[i].stats.BytesSent > 0) {
                                    var accBytesSent = parseInt(accounts[i].stats.BytesSent.substring(1));
                                    accounts[i].stats.MBSent = bytesSent / 1024 / 1024;
                                } else {
                                    accounts[i].stats.MBSent = 0;
                                }
                                if (accounts[i].stats.BytesReceived && accounts[i].stats.BytesReceived > 0) {
                                    var accBytesReceived = parseInt(accounts[i].stats.BytesReceived.substring(1));
                                    accounts[i].stats.MBReceived = bytesReceived / 1024 / 1024;
                                } else {
                                    accounts[i].stats.MBReceived = 0;
                                }
                            }
                            totals['account'].used += totals.domains[domain].diskUsage;
                        }

                        var html = new EJS({url: 'accounts_table.ejs'}).render({"accounts": accounts});
	                $("#accounts_table").html(html);
                        var htmlTotals = new EJS({url: 'totals_table.ejs'}).render({"totals": totals});
	                $("#totals_table").html(htmlTotals);
	                search_accounts();
	            } else {
	                $("#accounts_table").html("Error loading accounts!");
	            }
                };
                // send the request
                $.ajax({
	            type: "GET",
	            url: CPANEL.urls.json_api() + '&' + $.param(api2_call),
	            success: success
                });
            };
            
            var getDomainsWithStat = function () {
                var api2_call = {
	            "cpanel_jsonapi_version": 2,
	            "cpanel_jsonapi_module": "CommuniGate",
	            "cpanel_jsonapi_func": "getDomainsWithStat"
                };
                // callback
                var success = function (res) {
	            var data = JSON.parse(res);
                    domains = data.cpanelresult.data[0];
                    getAccounts();
                };
                
                $.ajax({
	            type: "GET",
	            url: CPANEL.urls.json_api() + '&' + $.param(api2_call),
	            success: success
                });
            };

            var getCpanelAccount = function () {
                var api2_call = {
	            "cpanel_jsonapi_version": 2,
	            "cpanel_jsonapi_module": "CommuniGate",
	            "cpanel_jsonapi_func": "getCpanelAccount"
                };
                // callback
                var success = function (res) {
	            var data = JSON.parse(res);
                    totals.account = {
                        "account": data.cpanelresult.data[0],
                        "used": 0
                    };
                    getDomainsWithStat();
                };
                
                $.ajax({
	            type: "GET",
	            url: CPANEL.urls.json_api() + '&' + $.param(api2_call),
	            success: success
                });
            };
            getCpanelAccount();

            function clear_search() {
                $("#search_input").val("");
                search_accounts();
            };

            function search_accounts() {
                var tmp_accounts = [];
                var searchregex = $("#search_input").val();
                for (var j = 0; j < accounts.length; j++) {
	            tmp_accounts.push(accounts[j]);
                }
                for (var i = 0; i < tmp_accounts.length; i++) {
	            if (accounts[i].prefs.AccountName.indexOf(searchregex) > -1) {
	                tmp_accounts[i].in_search = true;
	            } else {
	                tmp_accounts[i].in_search = false;
	            }
                }
                var html = new EJS({url: 'accounts_table.ejs'}).render({"accounts": tmp_accounts});
                $("#accounts_table").html(html);
            }
            $("#search_input").keyup(search_accounts);
            $("#clear_search").click(clear_search);

	});
    });
});
